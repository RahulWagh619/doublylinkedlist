#include <bits/stdc++.h>
using namespace std;

class node {
public:
    int data;
    node* prev;
    node* next;
    node() {
        this->data = 0;
        this->prev = nullptr;
        this->next = nullptr;
    }
    node(int data) {
        this->data = data;
        this->prev = nullptr;
        this->next = nullptr;
    }
    ~node(){

    }
};

void print(node*& head) {
    node* temp = head;
    while (temp != nullptr) {
        cout << temp->data << " ";
        temp = temp->next;
    }
}

int getlength(node*& head) {
    node* temp = head;
    int length = 0;
    while (temp != nullptr) {
        temp = temp->next;
        length++;
    }
    return length;
}

void insertathead(node*& head, node*& tail, int data) {
    node* newnode = new node(data);
    if (head == nullptr) {
        head = newnode;
        tail = newnode;
        return;
    }
    newnode->next = head;
    head->prev = newnode;
    head = newnode;
}

void insertattail(node*& head, node*& tail, int data) {
    node* newnode = new node(data);
    if (head == nullptr) {
        head = newnode;
        tail = newnode;
        return;
    }
    tail->next = newnode;
    newnode->prev = tail;
    tail = newnode;
}

void insertatpos(node*& head, node*& tail, int data, int pos) {
    node* newnode = new node(data);
    int len = getlength(head);
    if (head == nullptr) {
        head = newnode;
        tail = newnode;
        return;
    }
    else if (pos == 1) {
        insertathead(head, tail, data);
    }
    else if (pos >len) {
        insertattail(head, tail, data);
    }
    else {
        int i = 1;
        node* prevnode = head;
        while (i < pos-1) {
            prevnode= prevnode->next;
            i++;
        }
        node* curr = prevnode->next;
        prevnode->next = newnode;
        newnode->prev = prevnode;
        curr->prev = newnode;
        newnode->next = curr;
    }
}
void deletenode(node*&head,node*&tail,int pos){
    int len = getlength(head);
    if(head==nullptr){
        cout<<"cannot be deleted";
    }
    else if(pos==1){
        node*temp=head;
        head=head->next;
        head->prev=nullptr;
        delete temp;
    }
    else if(pos==len){
        node*temp=tail;
        tail=tail->prev;
        tail->next=nullptr;
        delete temp;
    }
    else {
        int i=1;
        node*prevnode=head;
        while(i<pos-1){
            prevnode=prevnode->next;
            i++;
        }
        node*temp=prevnode->next;
        node*forward=temp->next;
        prevnode->next=forward;
        forward->prev=prevnode;
        delete temp;
    }
}

int main() {
    node* head = nullptr;
    node* tail = head;
    insertathead(head, tail, 40);
    insertattail(head, tail, 50);
    insertatpos(head, tail, 30, 2);
    insertatpos(head, tail, 90, 2);
    insertatpos(head, tail, 69, 5);
    node*prevnode=nullptr;
    node*curr=head;

    print(head);

    return 0;
}
